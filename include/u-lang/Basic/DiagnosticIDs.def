/**
 * The U Programming Language
 *
 * Copyright 2018 Joseph Benden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * \author Joseph W. Benden
 * \copyright (C) 2018 Joseph Benden
 * \license apache2
 */

#ifndef DIAGNOSTIC
#define DIAGNOSTIC(SEVERITY, COMPONENT, ID, TITLE, MESSAGE)
#endif

// LCOV_EXCL_START

DIAGNOSTIC(Fatal,
           Lexer,
           unterminated_string,
           "Unterminated String",
           "An unterminated string was encountered while lexing the source code shown above.")
DIAGNOSTIC(Warning,
           Lexer,
           bad_escape_sequence,
           "Invalid Escape Code Sequence",
           "An invalid escape code ‘%0’ sequence character was found while lexing the source code shown above.")
DIAGNOSTIC(Warning,
           Lexer,
           bad_hex_digit,
           "Invalid Hexadecimal Digit",
           "An invalid hexadecimal digit '%0' was encountered while lexing the source code shown above.")

DIAGNOSTIC(Ignore, UnitTest, unit_test_0001, "Unit-test", "I have %0 sense.")
DIAGNOSTIC(Ignore, UnitTest, unit_test_0002, "Unit-test", "I have %0 sense%s0.")
DIAGNOSTIC(Ignore, UnitTest, unit_test_0003, "Unit-test", "The %ordinal0 sense.")

DIAGNOSTIC(Ignore, UnitTest, unit_test_0004, "Unit-test", "I have %0 sense.")
DIAGNOSTIC(Ignore, UnitTest, unit_test_0005, "Unit-test", "I have %0 sense%s0.")
DIAGNOSTIC(Ignore, UnitTest, unit_test_0006, "Unit-test", "The %ordinal0 sense.")

DIAGNOSTIC(Ignore, UnitTest, unit_test_0007, "Unit-test", "Token %0.")

DIAGNOSTIC(Ignore, UnitTest, unit_test_0008, "Unit-test", "%%.")

DIAGNOSTIC(Ignore, UnitTest, unit_test_0009, "Unit-test", "%0")

DIAGNOSTIC(Ignore, UnitTest, unit_test_0010, "Unit-test", "%select{a|b|c}0")
DIAGNOSTIC(Ignore, UnitTest, unit_test_0011, "Unit-test", "%select{a|%%|c}0")

// LCOV_EXCL_STOP

#undef DIAGNOSTIC